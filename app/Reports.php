<?php

namespace App;

use App\Scopes\LoggedUser;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;

class Reports extends Model
{
    protected $table = 'incomes_expenses';

    protected $dates = ['updated_at', 'date'];


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::addGlobalScope(new LoggedUser());
    }

//    public static function getMonthlyMealReaport( $request )
//    {
//        if ( $request->s ) {
//            $reports = new Meal();
//            $reports->select( DB::raw( 'user_id', 'date', 'sum(total)' ) );
//            if ( $request->year ) {
//                $reports = $reports->where( DB::raw( 'year(date)' ), $request->year );
//            }
//            if ( $request->month ) {
//                $reports = $reports->where( DB::raw( 'month(date)' ), $request->month );
//            }
//            $reports = $reports->groupBy( "date", 'user_id' )->orderBy( "date" )->get();
//
//            $data = $repData = [];
//
//            $users = $reports->pluck( 'user_id', 'user_id' )->toArray();
//
//            foreach ( $reports as $report ) {
//                foreach ( $users as $user ) {
//                    if ( array_key_exists( $user, $reports ) ) {
//                        $repData[$report->date->format( 'Y-m-d' )][$report->user_id] = $report->toArray();
//                    } else {
//                        $repData[$report->date->format( 'Y-m-d' )][$user] = [];
//                    }
//                }
//
//                $data['user'][$report->user_id] = $report->user->name;
//                $data['reports']                = $repData;
//            }
//
//            return $data;
//        }
//
//        return FALSE;
//    }

    public static function getMonthlyMealReaport($year, $month)
    {
        $users = User::all();

        $firstDayofMonth = "{$year}-{$month}-01";

        $carbon = Carbon::parse();
        $days   = $carbon->daysInMonth;

        $lastDayofMonth = "{$year}-{$month}-{$days}";

        $data = [];

        foreach ($users as $user) {

            $data['users'][$user->id] = $user->toArray();

            for ($i = 1; $i <= $days; $i++) {
                $carbon = Carbon::parse("{$year}-{$month}-$i");
                $date   = $carbon->toDateString();

                $meals = $user->meals()->where('date', $date)->first();

                $data['meals'][$carbon->format('d-m-Y')][$user->id] = $meals ? $meals->toArray() : ['meal' => 0, 'guest' => 0, 'total' => 0];
            }

            $data['totals'][$user->id] = $user->meals()
                                              ->select(DB::raw('sum(meal) total_meal ,sum(guest) total_guest, sum(total) total_total'))
                                              ->whereBetween('date', [$firstDayofMonth, $lastDayofMonth])
                                              ->first()->toArray();
        }

        return $data;
    }
}
